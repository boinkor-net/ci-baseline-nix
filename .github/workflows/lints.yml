name: "CI/Nix - formatting"
on:
  workflow_call:
    inputs:
      root:
        type: string
        description: "Directory that the nix flake resides in."
        default: "."

      # Used for testing this repo:
      _internal_continue_on_error:
        description: "Name of the job to set continue-on-error on; pass this only in the tests _inside this repo_. Otherwise your workflow run will pass when it shouldn't."
        type: string
        default: ""
    outputs:
      _internal_lint_result:
        description: "Result of the build job"
        value: '{"fmt": ${{toJSON(jobs.fmt.outputs.result)}}, "flake_safety": ${{toJSON(jobs.flake_safety.outputs.result)}}}'

jobs:
  fmt:
    name: "nix fmt ${{inputs.root}}"
    continue-on-error: ${{inputs._internal_continue_on_error == 'fmt'}}
    outputs:
      result: ${{steps.result.outcome}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v30
      - uses: DeterminateSystems/magic-nix-cache-action@v9
      - run: cd ${{ inputs.root }} && nix fmt
      - name: Show unformatted files, if any
        run: git diff --exit-code
        id: result

  flake_safety:
    name: "nix flake safety"
    continue-on-error: ${{inputs._internal_continue_on_error == 'flake_safety'}}
    outputs:
      result: ${{steps.result.outcome}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./actions/flake_safety
        with:
          root: ${{inputs.root}}
